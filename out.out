[16:32:35] Using gulpfile ~/Downloads/predix-seed/gulpfile.js
[16:32:35] Starting 'default'...
[16:32:35] Starting 'compile:sass'...
[16:32:35] Finished 'compile:sass' after 33 ms
[16:32:35] Starting 'compile:index'...
[16:32:35] Finished 'compile:index' after 3.01 ms
[16:32:35] Starting 'serve:dev:start'...
[16:32:35] Finished 'serve:dev:start' after 40 ms
[16:32:35] Starting 'watch:public'...
[16:32:35] Finished 'watch:public' after 270 ms
[16:32:35] Finished 'default' after 352 ms
[16:32:35] [nodemon] 1.11.0
[16:32:35] [nodemon] to restart at any time, enter `rs`
[16:32:35] [nodemon] watching: *.*
[16:32:35] [nodemon] starting `node server/app.js`
vcaps: {}
vcaps: {"predix-uaa":[{"credentials":{"uri":"https://809a22e6-7d92-432a-8cf4-a30d6fb16ab5.predix-uaa.run.aws-jp01-pr.ice.predix.io"}}],"predix-timeseries":[{"credentials":{"query":{"uri":"https://time-series-store-predix.run.aws-jp01-pr.ice.predix.io/v1/datapoints","zone-http-header-value":"bb76beb4-9177-4239-a693-a6105e078c24"}}}],"predix-asset":[{"credentials":{"uri":"https://predix-asset.run.aws-jp01-pr.ice.predix.io","zone":{"http-header-value":"938ef3d1-88f0-48bf-97f2-49120741150d"}}}]}
no proxy set for service: predix-uaa
setting proxy route for key: predix-timeseries
serviceEndpoint: https://time-series-store-predix.run.aws-jp01-pr.ice.predix.io
setting proxy route for key: predix-asset
serviceEndpoint: https://predix-asset.run.aws-jp01-pr.ice.predix.io
************development******************
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
[ 'core-vibe',
  'datagrid',
  'delta-egt',
  'fan-vibration',
  'simple-data',
  'scatter' ]
custom endpoint: https://ob-datasource.run.aws-jp01-pr.ice.predix.io
custom endpoint: https://time-series-store-predix.run.aws-jp01-pr.ice.predix.io
Server started on port: 5000
Redirecting to secure route...
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 19548,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 58064,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3154,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 19566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object] },
     _idleStart: 19565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 19548,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 58064,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3154,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 19566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object] },
     _idleStart: 19565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 19548,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 58064,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 6,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3154,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 19566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Object] },
     _idleStart: 19565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 58064,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 19565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 58064,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 19565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10702,
        _externalStream: {},
        fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3639,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 19939,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10702,
        _externalStream: {},
        fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3639,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 19939,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10702,
        _externalStream: {},
        fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3639,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3399,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 19939,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3639,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 19939,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3639,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 19939,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 11547,
        _externalStream: {},
        fd: 16,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3885,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 10951,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 29563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 11547,
        _externalStream: {},
        fd: 16,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3885,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 10951,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 29563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 11547,
        _externalStream: {},
        fd: 16,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3885,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 10951,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 29563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3885,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 29563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3885,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 29563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 9537,
        _externalStream: {},
        fd: 13,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 10951,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3400,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 39563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 9537,
        _externalStream: {},
        fd: 13,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 10951,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3400,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 39563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 9537,
        _externalStream: {},
        fd: 13,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 10951,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3400,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 19078,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 39563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 10951,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 39563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 10951,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 39563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10093,
        _externalStream: {},
        fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3400,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 9425,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 18969,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 49563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10093,
        _externalStream: {},
        fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3400,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 9425,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 18969,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 49563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 10093,
        _externalStream: {},
        fd: 14,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 3400,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 9425,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 18969,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 49563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3400,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 49563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3400,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 49563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8880,
        _externalStream: {},
        fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 9425,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8880,
        _externalStream: {},
        fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 9425,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8880,
        _externalStream: {},
        fd: 17,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 9425,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59562,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 9425,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 59562,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 9425,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 59562,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 495,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 69570,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 495,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 69570,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     '_gat=1; cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 495,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 69570,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 69570,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 69570,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _gat: '1', _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 79572,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 79572,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 79572,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 79572,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 79572,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 89577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 89577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 89577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 89577,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 89577,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 99566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 99566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 99566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 99566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 99566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 109563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 109563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 109563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 109563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 109563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 119564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 119564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 119564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 119564,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 119564,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 129563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 129563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 129563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 129563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 129563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 139565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 139565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 139565,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 139565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 139565,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 149566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 149566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 149566,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 149566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 149566,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 159563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 159563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 159563,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 159563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 159563,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
req: IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: true,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: true,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 169564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 169564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:5000',
     connection: 'keep-alive',
     accept: 'application/json',
     'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     referer: 'http://localhost:5000/',
     'accept-encoding': 'gzip, deflate, sdch, br',
     'accept-language': 'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     cookie: 'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' },
  rawHeaders: 
   [ 'Host',
     'localhost:5000',
     'Connection',
     'keep-alive',
     'accept',
     'application/json',
     'User-Agent',
     'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36',
     'Referer',
     'http://localhost:5000/',
     'Accept-Encoding',
     'gzip, deflate, sdch, br',
     'Accept-Language',
     'ko-KR,ko;q=0.8,en-US;q=0.6,en;q=0.4',
     'Cookie',
     'cookie_name=s%3A1urku2ngynAbFDkTheFpXVKzFA0csuJz.YvRA3EiLdLdDx1RPEva6VzvUbIZ%2FJ81hXjoJQJI3MyM; _ga=GA1.1.1725551634.1482814692' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/api/v1/latest',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 487,
        _externalStream: {},
        fd: 12,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::5000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 169564,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end] } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/v1/latest',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 169564,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 169564,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end] },
  secret: 'predixsample',
  cookies: { _ga: 'GA1.1.1725551634.1482814692' },
  signedCookies: { cookie_name: '1urku2ngynAbFDkTheFpXVKzFA0csuJz' },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/api/v1/latest',
     path: '/api/v1/latest',
     href: '/api/v1/latest',
     _raw: '/api/v1/latest' },
  sessionStore: 
   MemoryStore {
     domain: null,
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _maxListeners: undefined,
     sessions: { '1urku2ngynAbFDkTheFpXVKzFA0csuJz': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"ticket":{"access_token":"eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw","refresh_token":"35bbf8b4ebaf4a15bc254dbc40fef6a5-r","expires":1482899572}}}}' },
     generate: [Function] },
  sessionID: '1urku2ngynAbFDkTheFpXVKzFA0csuJz',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     passport: { user: [Object] } },
  _passport: 
   { instance: 
      Authenticator {
        _key: 'passport',
        _strategies: [Object],
        _serializers: [Object],
        _deserializers: [Object],
        _infoTransformers: [],
        _framework: [Object],
        _userProperty: 'user',
        Authenticator: [Function: Authenticator],
        Passport: [Function: Authenticator],
        Strategy: [Object],
        strategies: [Object] },
     session: { user: [Object] } },
  user: 
   { ticket: 
      { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
        refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
        expires: 1482899572 } },
  body: {},
  route: 
   Route {
     path: '/api/v1/latest',
     stack: [ [Object], [Object] ],
     methods: { get: true } },
  authInfo: 
   { access_token: 'eyJhbGciOiJSUzI1NiIsImtpZCI6ImxlZ2FjeS10b2tlbi1rZXkiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiI0ZTNlNjQyNzQxMjM0OTc2OGRhNmMwYTdhOTAyZGM2ZCIsInN1YiI6IjIwODRjYmJmLWM1YjUtNDNmNy05NDhiLWQzNmRhNTZmMzY3NCIsInNjb3BlIjpbInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnF1ZXJ5Iiwic2NpbS5tZSIsIm9wZW5pZCIsInByZWRpeC1hc3NldC56b25lcy45MzhlZjNkMS04OGYwLTQ4YmYtOTdmMi00OTEyMDc0MTE1MGQudXNlciIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LmluZ2VzdCIsInRpbWVzZXJpZXMuem9uZXMuYmI3NmJlYjQtOTE3Ny00MjM5LWE2OTMtYTYxMDVlMDc4YzI0LnVzZXIiXSwiY2xpZW50X2lkIjoidWlDbGllbnQiLCJjaWQiOiJ1aUNsaWVudCIsImF6cCI6InVpQ2xpZW50IiwiZ3JhbnRfdHlwZSI6ImF1dGhvcml6YXRpb25fY29kZSIsInVzZXJfaWQiOiIyMDg0Y2JiZi1jNWI1LTQzZjctOTQ4Yi1kMzZkYTU2ZjM2NzQiLCJvcmlnaW4iOiJ1YWEiLCJ1c2VyX25hbWUiOiJ0ZXN0VXNlciIsImVtYWlsIjoidGVzdEBvYi5jby5rciIsImF1dGhfdGltZSI6MTQ4Mjg1MDI2MywicmV2X3NpZyI6ImIxMTAyNzk1IiwiaWF0IjoxNDgyODU2MzczLCJleHAiOjE0ODI4OTk1NzMsImlzcyI6Imh0dHBzOi8vODA5YTIyZTYtN2Q5Mi00MzJhLThjZjQtYTMwZDZmYjE2YWI1LnByZWRpeC11YWEucnVuLmF3cy1qcDAxLXByLmljZS5wcmVkaXguaW8vb2F1dGgvdG9rZW4iLCJ6aWQiOiI4MDlhMjJlNi03ZDkyLTQzMmEtOGNmNC1hMzBkNmZiMTZhYjUiLCJhdWQiOlsidWlDbGllbnQiLCJzY2ltIiwib3BlbmlkIiwidGltZXNlcmllcy56b25lcy5iYjc2YmViNC05MTc3LTQyMzktYTY5My1hNjEwNWUwNzhjMjQiLCJwcmVkaXgtYXNzZXQuem9uZXMuOTM4ZWYzZDEtODhmMC00OGJmLTk3ZjItNDkxMjA3NDExNTBkIl19.BWXxs7yKqeulE8mrlNj1vqsIcrxM3-F-voCJQVcr4eTe3pANmzy9Hda0W0ZyZij85_sshpC-IVytkE6pEGm-l1ux5bl31sl-0EIig0aDV0DsH6sQ0XmVyHpzAhuHZoDPR8JY6BwtcEHLu0mgkmdHFSVB038cN_phn9_I_RHO97oIdiqVmq17fHU9qiV83ORelWDOqw-Mr8bTV55G3On7-RsZJjK5kaP30n3AIvw480vzv6b5Cz9ERyKHnsDBP8RaV70gnAMFaq5Wb0DS2x6TCHl4QFgV7snG7FLqEFkK0vjCmPNR0iWsmIhN3mMoMGXru4CgTkLwLLrhVZdXkPwtiw',
     refresh_token: '35bbf8b4ebaf4a15bc254dbc40fef6a5-r',
     expires: 1482899572 } }
proxying to: /api
